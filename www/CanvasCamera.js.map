{"version":3,"file":"CanvasCamera.js","sourceRoot":"","sources":["../ts-src/CanvasCamera.ts"],"names":[],"mappings":"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","sourcesContent":["import * as cordova from 'cordova';\r\nimport {CanvasCameraOptions} from './CanvasCameraOptions';\r\nimport {CanvasCameraData} from './CanvasCameraData';\r\nimport {BarcodeResult} from './BarcodeResult';\r\n\r\nconst exec = require('cordova/exec');\r\n\r\nclass CanvasCamera\r\n{\r\n    nativeClass: 'CanvasCamera';\r\n\r\n    private onImage?: (data: string) => void;\r\n    private onBarcodeResult?: (codes: BarcodeResult[]) => void;\r\n\r\n    constructor()\r\n    {\r\n\r\n    }\r\n\r\n    setCallbacks(img: (data: string) => void, codes: (codes: BarcodeResult[]) => void)\r\n    {\r\n        this.onImage = img;\r\n        this.onBarcodeResult = codes;\r\n    }\r\n    clearCallbacks()\r\n    {\r\n        delete this.onImage;\r\n        delete this.onBarcodeResult;\r\n    }\r\n\r\n    start(options: CanvasCameraOptions): Promise<void>\r\n    {\r\n        console.log('CanvasCamera: Start');\r\n        return new Promise<void>((resolve, reject) =>\r\n        {\r\n            let returned: boolean = false;\r\n            console.log('===========');\r\n            console.log('===========');\r\n            console.log('===========');\r\n            console.log('===========');\r\n            console.log('STARTING');\r\n            console.log('===========');\r\n            console.log('===========');\r\n            console.log('===========');\r\n            console.log('===========');\r\n            try\r\n            {\r\n                /*\r\n                exec((data: any) =>\r\n                {\r\n                    console.log('GOT RESULT');\r\n                    if (!returned)\r\n                    {\r\n                        returned = true;\r\n                        resolve();\r\n                    }\r\n                    this.onCapture(data);\r\n                }, (err: any) =>\r\n                {\r\n                    console.log('GOT ERROR');\r\n                    console.log(err);\r\n                    if (!returned)\r\n                    {\r\n                        returned = true;\r\n                        reject(err);\r\n                    }\r\n                }, this.nativeClass, 'startCapture', []);\r\n                 */\r\n\r\n                exec(function(data: any) {\r\n                    console.log('GOT DATA');\r\n                }.bind(this), function(error: any) {\r\n                    console.log('ERROR!');\r\n                    console.error(error);\r\n                }.bind(this), this.nativeClass, 'startCapture', [options]);\r\n            }\r\n            catch(err)\r\n            {\r\n                returned = true;\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    setScan(scan: boolean)\r\n    {\r\n        return new Promise<void>((resolve, reject) =>\r\n        {\r\n            let returned: boolean = false;\r\n            cordova.exec((data: CanvasCameraData) =>\r\n            {\r\n                if (!returned)\r\n                {\r\n                    returned = true;\r\n                    resolve();\r\n                }\r\n            }, (err) =>\r\n            {\r\n                if (!returned)\r\n                {\r\n                    returned = true;\r\n                    reject(err);\r\n                }\r\n            }, this.nativeClass, 'setScan', [scan]);\r\n        });\r\n    }\r\n    setCapture(capture: boolean)\r\n    {\r\n        return new Promise<void>((resolve, reject) =>\r\n        {\r\n            let returned: boolean = false;\r\n            cordova.exec((data: CanvasCameraData) =>\r\n            {\r\n                if (!returned)\r\n                {\r\n                    returned = true;\r\n                    resolve();\r\n                }\r\n            }, (err) =>\r\n            {\r\n                if (!returned)\r\n                {\r\n                    returned = true;\r\n                    reject(err);\r\n                }\r\n            }, this.nativeClass, 'setCapture', [capture]);\r\n        });\r\n    }\r\n\r\n    onCapture(data: CanvasCameraData)\r\n    {\r\n        if (data.output)\r\n        {\r\n            if (data.output.images && data.output.images.fullsize && data.output.images.fullsize.data)\r\n            {\r\n                if (this.onImage)\r\n                {\r\n                    this.onImage(data.output.images.fullsize.data);\r\n                }\r\n            }\r\n            if (data.output.codes)\r\n            {\r\n                if (this.onBarcodeResult)\r\n                {\r\n                    this.onBarcodeResult(data.output.codes);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = new CanvasCamera();\r\n//exports.CanvasCamera = CanvasCamera;"]}